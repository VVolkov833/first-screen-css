<?php

// functions

namespace FCP\FirstScreenCSS;
defined( 'ABSPATH' ) || exit;


function get_names_to_($ids, $label) {

    if ( empty( $ids ) ) { return []; }

    global $wpdb;

    $wpdb->query( $wpdb->remove_placeholder_escape( $wpdb->prepare('

        SELECT
            IF ( STRCMP( `meta_key`, %s ) = 0, `meta_value`, "" ) AS "styles",
            IF ( STRCMP( `meta_key`, %s ) = 0, `meta_value`, "" ) AS "scripts"
        FROM `'.$wpdb->postmeta.'`
        WHERE ( `meta_key` = %s OR `meta_key` = %s ) AND `post_id` IN ( '.implode( ',', array_fill( 0, count( $ids ), '%s' ), ).' )

    ', array_merge(
        [ FCPFSC_PREF.$label.'-style-names', FCPFSC_PREF.$label.'-script-names', FCPFSC_PREF.$label.'-style-names', FCPFSC_PREF.$label.'-script-names' ],
        $ids
    ) ) ) );

    $clear = function($a) { return array_values( array_unique( array_filter( array_map( 'trim', explode( ',', implode( ', ', $a ) ) ) ) ) ); };
    
    $styles = $clear( $wpdb->get_col( null, 0 ) );
    $scripts = $clear( $wpdb->get_col( null, 1 ) );

    return [ $styles, $scripts ];
}


function get_all_styles($data = false) {
    return get_all_styles_scripts_('style', $data);
}
function get_all_scripts($data = false) {
    return get_all_styles_scripts_('script', $data);
}

function get_all_styles_scripts_($ss, $data = false) { // handle by default and array with $data
    $global = 'wp_'.$ss.'s';
    global $$global;
    if ( empty( $$global ) ) { return; }

    if ( $data ) {
        return array_reduce( (array) $$global->registered ?? [], function( $result, $el ) {
            if ( empty($el->src) && ( !isset($el->extra) || empty($el->extra['path']) ) ) { return $result; }
            $result[ $el->handle ] = [
                'handle' => $el->handle,
                'src' => $el->src,
                'path' => $el->extra['path'],
                'get' => !empty($el->extra['path']) ? $el->extra['path'] : ( strpos( $el->src, 'http' ) === 0 ? $el->src : null ),
            ];
            return $result;
        }, [] );
    }

    return array_filter( array_map( function( $el ) {
        $name = $el->handle;
        if ( strpos( $name, FCPFSC_FRONT_NAME ) === 0 ) { return null; } // exclude those generated by the plugin
        return $name ?? null;
    }, (array) $$global->registered ?? [] ) );

}